name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  SECRET: ${{ secrets.SECRET }}

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install && cd frontend && npm install
      - name: Check backend style
        run: npm run lint
      - name: Check frontend style
        working-directory: ./frontend
        run: npm run lint
      - name: Test backend
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
        run: npm run test
      - name: Test frontend
        working-directory: ./frontend
        run: npm run test
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      - name: Discord error notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@08d9328877d6954120eef2b07abbc79249bb6210
        if : ${{ github.event_name == 'push' && failure() }}
        with:
          args: 'Build failed. Commit ${{ github.event.head_commit.url }} by ${{ github.event.head_commit.committer.username }} broke the code.'
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - if: ${{ github.event_name == 'push' && !contains(join(fromJson(toJson(github.event.commits)).*.message, ' '), '#skip') }}
        name: Deploy to Fly.io
        id: deploy
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@08d9328877d6954120eef2b07abbc79249bb6210
        if: ${{ steps.deploy.conclusion == 'success' }}
        with:
          args: 'A new version of bloglist deployed to https://fs-part11-my-app.fly.dev/'
  
  tag_release:
    if: ${{ github.event_name == 'push' && !contains(join(fromJson(toJson(github.event.commits)).*.message, ' '), '#skip') }}
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.71.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch